From 35a4169318618a89e1c39263f7364b8833a0a05e Mon Sep 17 00:00:00 2001
From: Merlijn Wajer <merlijn@wizzup.org>
Date: Mon, 15 Nov 2021 16:28:25 +0000
Subject: [PATCH 1/2] Fix meson build system and build pvr driver

Also fix compilation problem in freedreno that's still unsolved in
master
---
 debian/rules                                   |  3 ++-
 meson.build                                    |  4 ++--
 src/gallium/drivers/freedreno/freedreno_util.h | 10 ++++++++++
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/debian/rules b/debian/rules
index 54eb0df..9fe080a 100755
--- a/debian/rules
+++ b/debian/rules
@@ -76,7 +76,8 @@ else
 
 	# etnaviv, kmsro, tegra, vc4 and v3d kernel support are only available on armhf and arm64
 	ifneq (,$(filter $(DEB_HOST_ARCH), armhf arm64))
-		GALLIUM_DRIVERS += etnaviv kmsro lima panfrost tegra vc4 v3d
+		DRI_DRIVERS += pvr
+		GALLIUM_DRIVERS += etnaviv kmsro lima panfrost vc4 v3d
 		VULKAN_DRIVERS += broadcom
 	endif
 
diff --git a/meson.build b/meson.build
index 4524d68..2fae3b6 100644
--- a/meson.build
+++ b/meson.build
@@ -1531,7 +1531,6 @@ _libdrm_checks = [
   ['radeon', (with_gallium_radeonsi or with_dri_r100 or with_dri_r200 or
               with_gallium_r300 or with_gallium_r600)],
   ['nouveau', (with_gallium_nouveau or with_dri_nouveau)],
-  ['pvr', with_dri_pvr],
 ]
 
 # VC4 only needs core libdrm support of this version, not a libdrm_vc4
@@ -1561,7 +1560,8 @@ endif
 
 # Then get each libdrm module
 foreach d : _libdrm_checks
-  if d[1] and d[2]
+  #if d[1] and d[2]
+  if d[1]
     set_variable(
       'dep_libdrm_' + d[0],
       dependency('libdrm_' + d[0], version : '>=' + _drm_ver)
diff --git a/src/gallium/drivers/freedreno/freedreno_util.h b/src/gallium/drivers/freedreno/freedreno_util.h
index c989262..d194019 100644
--- a/src/gallium/drivers/freedreno/freedreno_util.h
+++ b/src/gallium/drivers/freedreno/freedreno_util.h
@@ -44,6 +44,16 @@
 #include "adreno_pm4.xml.h"
 #include "disasm.h"
 
+
+#include <unistd.h>
+#include <sys/syscall.h>
+
+#ifndef SYS_gettid
+#error "SYS_gettid unavailable on this system"
+#endif
+
+#define gettid() ((pid_t)syscall(SYS_gettid))
+
 #ifdef __cplusplus
 extern "C" {
 #endif
-- 
2.32.0

